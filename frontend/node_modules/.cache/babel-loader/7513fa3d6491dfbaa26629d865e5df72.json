{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport productListReducer from './product/reducers';\nimport cartReducer from './cart/reducers';\nimport rootSaga from './combineReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer\n});\nconst initialState = {};\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [thunk, sagaMiddleware];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","createSagaMiddleware","composeWithDevTools","productListReducer","cartReducer","rootSaga","reducer","productList","cart","initialState","sagaMiddleware","middleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,WAAW,EAAEJ,kBADiB;AAE9BK,EAAAA,IAAI,EAAEJ;AAFwB,CAAD,CAA/B;AAIA,MAAMK,YAAY,GAAG,EAArB;AACA,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,MAAMU,UAAU,GAAG,CAACX,KAAD,EAAQU,cAAR,CAAnB;AACA,MAAME,KAAK,GAAGf,WAAW,CACvBS,OADuB,EAEvBG,YAFuB,EAGvBP,mBAAmB,CAACH,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHI,CAAzB;AAOAD,cAAc,CAACG,GAAf,CAAmBR,QAAnB;AACA,eAAeO,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport productListReducer from './product/reducers';\r\nimport cartReducer from './cart/reducers';\r\nimport rootSaga from './combineReducer'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  cart: cartReducer,\r\n});\r\nconst initialState = {};\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [thunk, sagaMiddleware];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}