{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uzuma\\\\Desktop\\\\hamdiRH\\\\proshop mern\\\\frontend\\\\src\\\\containers\\\\cart.js\";\nimport React, { useEffect } from 'react';\nimport _ from 'lodash';\nimport { Link, useParams, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../redux/cart/actions';\nimport PropTypes from 'prop-types';\n\nconst Cart = () => {\n  const params = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    data\n  } = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = data;\n  const productId = params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  console.log('productId', productId);\n  useEffect(() => {\n    if (productId) dispatch(addToCart(productId, qty));\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    ms: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Shopping cart\"), _.isEmpty(cartItems) ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Your cart is empty \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  }, \"Go Back\")) : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, cartItems.map(item => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    ms: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"$\", item.price), /*#__PURE__*/React.createElement(Col, {\n    ms: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: qty,\n    onChange: e => setQty(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    value: x + 1,\n    key: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, x + 1))))))))));\n};\n\nCart.propTypes = {};\nexport default Cart;","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/containers/cart.js"],"names":["React","useEffect","_","Link","useParams","useHistory","useLocation","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","PropTypes","Cart","params","history","location","dispatch","data","state","cart","cartItems","productId","id","qty","search","Number","split","console","log","isEmpty","map","item","_id","image","name","product","price","e","setQty","target","value","Array","countInStock","keys","x","propTypes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { Link, useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart } from '../redux/cart/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cart = () => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector((state) => state.cart);\r\n  const { cartItems } = data;\r\n  const productId = params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n  console.log('productId', productId);\r\n  useEffect(() => {\r\n    if (productId) dispatch(addToCart(productId, qty));\r\n  }, [dispatch, productId, qty]);\r\n  return (\r\n    <Row>\r\n      <Col ms={8}>\r\n        <h1>Shopping cart</h1>\r\n        {_.isEmpty(cartItems) ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item._id}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n            <Col ms={2}>${item.price}</Col>\r\n                  <Col ms={2}>\r\n                  <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option value={x + 1} key={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nCart.propTypes = {};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}