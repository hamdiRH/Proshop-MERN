{"ast":null,"code":"import { takeEvery, put, all, call } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* login({\n  payload\n}) {\n  try {\n    const data = yield call(api.loginService, payload);\n    yield put({\n      type: CONSTANTS.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    localStorage.setItem('token', data.token);\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* logout() {\n  try {\n    yield put({\n      type: CONSTANTS.USER_LOGOUT_SUCCESS\n    });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('token');\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_LOGOUT_FAIL\n    });\n  }\n}\nexport function* loginWatcher() {\n  yield takeEvery(CONSTANTS.USER_LOGIN_REQUEST, login);\n}\nexport function* logoutWatcher() {\n  yield takeEvery(CONSTANTS.USER_LOGOUT_REQUEST, logout);\n}\nexport default function* productSaga() {\n  yield all([loginWatcher(), logoutWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/auth/saga.js"],"names":["takeEvery","put","all","call","api","CONSTANTS","login","payload","data","loginService","type","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","token","error","USER_LOGIN_FAIL","response","message","logout","USER_LOGOUT_SUCCESS","removeItem","USER_LOGOUT_FAIL","loginWatcher","USER_LOGIN_REQUEST","logoutWatcher","USER_LOGOUT_REQUEST","productSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,OAAO,UAAUC,KAAV,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA6B;AAClC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAML,IAAI,CAACC,GAAG,CAACK,YAAL,EAAmBF,OAAnB,CAAvB;AAEA,UAAMN,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACM,kBADR;AAERJ,MAAAA,OAAO,EAAEC;AAFD,KAAD,CAAT;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACQ,KAAnC;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACa,eADR;AAERX,MAAAA,OAAO,EACLU,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,OADxB,GAEIH,KAAK,CAACG;AALJ,KAAD,CAAT;AAOD;AACF;AAED,OAAO,UAAUC,MAAV,GAAmB;AACxB,MAAI;AACF,UAAMpB,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACiB;AADR,KAAD,CAAT;AAGAV,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACD,GAND,CAME,OAAON,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACmB;AADR,KAAD,CAAT;AAGD;AACF;AACD,OAAO,UAAUC,YAAV,GAAyB;AAC9B,QAAMzB,SAAS,CAACK,SAAS,CAACqB,kBAAX,EAA+BpB,KAA/B,CAAf;AACD;AAED,OAAO,UAAUqB,aAAV,GAA0B;AAC/B,QAAM3B,SAAS,CAACK,SAAS,CAACuB,mBAAX,EAAgCP,MAAhC,CAAf;AACD;AAED,eAAe,UAAUQ,WAAV,GAAwB;AACrC,QAAM3B,GAAG,CAAC,CAACuB,YAAY,EAAb,EAAiBE,aAAa,EAA9B,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, put, all, call } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* login({ payload }) {\r\n  try {\r\n    const data = yield call(api.loginService, payload);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    localStorage.setItem('token', data.token);\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* logout() {\r\n  try {\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGOUT_SUCCESS,\r\n    });\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('token')\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGOUT_FAIL,\r\n    });\r\n  }\r\n}\r\nexport function* loginWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_LOGIN_REQUEST, login);\r\n}\r\n\r\nexport function* logoutWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_LOGOUT_REQUEST, logout);\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield all([loginWatcher(), logoutWatcher()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}