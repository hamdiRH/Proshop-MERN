{"ast":null,"code":"import { takeEvery, put, all, call } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* addToCart() {\n  try {\n    const data = yield call(api.addToCartService, id);\n    yield put({\n      type: CONSTANTS.PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* removeFromCart({\n  id\n}) {\n  try {\n    const data = yield call(api.fechProductDetail, id);\n    yield put({\n      type: CONSTANTS.PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* fetchProductsListWatcher() {\n  yield takeEvery(CONSTANTS.CART_ADD_ITEM_REQUEST, addToCart);\n}\nexport function* listProductDetailsWatcher() {\n  yield takeEvery(CONSTANTS.CART_REMOVE_ITEM_REQUEST, removeFromCart);\n}\nexport default function* productSaga() {\n  yield all([addToCartWatcher(), removeFromCartWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/cart/saga.js"],"names":["takeEvery","put","all","call","api","CONSTANTS","addToCart","data","addToCartService","id","type","PRODUCT_LIST_SUCCESS","payload","error","PRODUCT_LIST_FAIL","response","message","removeFromCart","fechProductDetail","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","fetchProductsListWatcher","CART_ADD_ITEM_REQUEST","listProductDetailsWatcher","CART_REMOVE_ITEM_REQUEST","productSaga","addToCartWatcher","removeFromCartWatcher"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,OAAO,UAAUC,SAAV,GAAsB;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACC,GAAG,CAACI,gBAAL,EAAsBC,EAAtB,CAAvB;AACA,UAAMR,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACM,oBADR;AAERC,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAT;AAID,GAND,CAME,OAAOM,KAAP,EAAc;AACd,UAAMZ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACS,iBADR;AAERF,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIH,KAAK,CAACG;AALJ,KAAD,CAAT;AAOD;AACF;AAED,OAAO,UAAUC,cAAV,CAAyB;AAACR,EAAAA;AAAD,CAAzB,EAA+B;AAClC,MAAI;AACF,UAAMF,IAAI,GAAG,MAAMJ,IAAI,CAACC,GAAG,CAACc,iBAAL,EAAuBT,EAAvB,CAAvB;AAEA,UAAMR,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACc,uBADR;AAERP,MAAAA,OAAO,EAAEL;AAFD,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAMZ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACe,oBADR;AAERR,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIH,KAAK,CAACG;AALJ,KAAD,CAAT;AAOD;AACF;AAEH,OAAO,UAAUK,wBAAV,GAAqC;AAC1C,QAAMrB,SAAS,CAACK,SAAS,CAACiB,qBAAX,EAAkChB,SAAlC,CAAf;AACD;AACD,OAAO,UAAUiB,yBAAV,GAAsC;AACzC,QAAMvB,SAAS,CAACK,SAAS,CAACmB,wBAAX,EAAqCP,cAArC,CAAf;AACD;AACH,eAAe,UAAUQ,WAAV,GAAwB;AACrC,QAAMvB,GAAG,CAAC,CAACwB,gBAAgB,EAAjB,EAAoBC,qBAAqB,EAAzC,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, put, all, call } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* addToCart() {\r\n  try {\r\n    const data = yield call(api.addToCartService,id);\r\n    yield put({\r\n      type: CONSTANTS.PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* removeFromCart({id}) {\r\n    try {\r\n      const data = yield call(api.fechProductDetail,id);\r\n\r\n      yield put({\r\n        type: CONSTANTS.PRODUCT_DETAILS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: CONSTANTS.PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  }\r\n\r\nexport function* fetchProductsListWatcher() {\r\n  yield takeEvery(CONSTANTS.CART_ADD_ITEM_REQUEST, addToCart);\r\n}\r\nexport function* listProductDetailsWatcher() {\r\n    yield takeEvery(CONSTANTS.CART_REMOVE_ITEM_REQUEST, removeFromCart);\r\n  }\r\nexport default function* productSaga() {\r\n  yield all([addToCartWatcher(),removeFromCartWatcher()]);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}