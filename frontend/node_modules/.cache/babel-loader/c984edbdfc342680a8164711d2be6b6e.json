{"ast":null,"code":"import { takeEvery, put, all, call, select } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* userDetails({\n  payload\n}) {\n  try {\n    const state = yield select();\n    const data = yield call(api.loginService, payload);\n    yield put({\n      type: CONSTANTS.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    localStorage.setItem('token', data.token);\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* userDetailsWatcher() {\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, userDetails);\n}\nexport default function* productSaga() {\n  yield all([userDetailsWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/user/saga.js"],"names":["takeEvery","put","all","call","select","api","CONSTANTS","userDetails","payload","state","data","loginService","type","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","token","error","USER_LOGIN_FAIL","response","message","userDetailsWatcher","USER_DETAILS_REQUEST","productSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAmCC,MAAnC,QAAiD,oBAAjD;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AACxC,MAAI;AACF,UAAMC,KAAK,GAAG,MAAML,MAAM,EAA1B;AACA,UAAMM,IAAI,GAAG,MAAMP,IAAI,CAACE,GAAG,CAACM,YAAL,EAAmBH,OAAnB,CAAvB;AAEA,UAAMP,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEN,SAAS,CAACO,kBADR;AAERL,MAAAA,OAAO,EAAEE;AAFD,KAAD,CAAT;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACQ,KAAnC;AACD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEN,SAAS,CAACc,eADR;AAERZ,MAAAA,OAAO,EACLW,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,OADxB,GAEIH,KAAK,CAACG;AALJ,KAAD,CAAT;AAOD;AACF;AAED,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMvB,SAAS,CAACM,SAAS,CAACkB,oBAAX,EAAiCjB,WAAjC,CAAf;AACD;AAED,eAAe,UAAUkB,WAAV,GAAwB;AACrC,QAAMvB,GAAG,CAAC,CAACqB,kBAAkB,EAAnB,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, put, all, call,select } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* userDetails({ payload }) {\r\n  try {\r\n    const state = yield select();\r\n    const data = yield call(api.loginService, payload);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    localStorage.setItem('token', data.token);\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* userDetailsWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, userDetails);\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield all([userDetailsWatcher(),]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}