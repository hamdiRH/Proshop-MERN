{"ast":null,"code":"import { takeEvery, put, all, call, select } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* addToCart({\n  id,\n  qty\n}) {\n  try {\n    const data = yield call(api.addToCartService, id);\n    const state = yield select();\n    yield put({\n      type: CONSTANTS.CART_ADD_ITEM_SUCCESS,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(state.cart.data.cartItems));\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.CART_ADD_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* removeFromCart({\n  id\n}) {\n  try {\n    const state = yield select();\n    yield put({\n      type: CONSTANTS.CART_REMOVE_ITEM_SUCCESS,\n      payload: id\n    });\n    localStorage.setItem('cartItems', JSON.stringify(state.cart.data.cartItems));\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.CART_REMOVE_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* saveShppingAdress({\n  address\n}) {\n  try {\n    const state = yield select();\n    yield put({\n      type: CONSTANTS.CART_SAVE_ADDRESS_SUCCESS,\n      payload: address\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify(address));\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.CART_SAVE_ADDRESS_FAIL\n    });\n  }\n}\nexport function* addToCartWatcher() {\n  yield takeEvery(CONSTANTS.CART_ADD_ITEM_REQUEST, addToCart);\n}\nexport function* removeFromCartWatcher() {\n  yield takeEvery(CONSTANTS.CART_REMOVE_ITEM_REQUEST, removeFromCart);\n}\nexport function* saveShppingAdressWatcher() {\n  yield takeEvery(CONSTANTS.CART_SAVE_ADDRESS_REQUEST, saveShppingAdress);\n}\nexport default function* productSaga() {\n  yield all([addToCartWatcher(), removeFromCartWatcher(), saveShppingAdressWatcher(), savepaymentAdressWatcher]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/cart/saga.js"],"names":["takeEvery","put","all","call","select","api","CONSTANTS","addToCart","id","qty","data","addToCartService","state","type","CART_ADD_ITEM_SUCCESS","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","error","CART_ADD_ITEM_FAIL","response","message","removeFromCart","CART_REMOVE_ITEM_SUCCESS","CART_REMOVE_ITEM_FAIL","saveShppingAdress","address","CART_SAVE_ADDRESS_SUCCESS","CART_SAVE_ADDRESS_FAIL","addToCartWatcher","CART_ADD_ITEM_REQUEST","removeFromCartWatcher","CART_REMOVE_ITEM_REQUEST","saveShppingAdressWatcher","CART_SAVE_ADDRESS_REQUEST","productSaga","savepaymentAdressWatcher"],"mappings":"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","sourcesContent":["import { takeEvery, put, all, call, select } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* addToCart({ id, qty }) {\r\n  try {\r\n    const data = yield call(api.addToCartService, id);\r\n    const state = yield select();\r\n    yield put({\r\n      type: CONSTANTS.CART_ADD_ITEM_SUCCESS,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      'cartItems',\r\n      JSON.stringify(state.cart.data.cartItems),\r\n    );\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.CART_ADD_ITEM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* removeFromCart({ id }) {\r\n  try {\r\n    const state = yield select();\r\n\r\n    yield put({\r\n      type: CONSTANTS.CART_REMOVE_ITEM_SUCCESS,\r\n      payload: id,\r\n    });\r\n    localStorage.setItem(\r\n      'cartItems',\r\n      JSON.stringify(state.cart.data.cartItems),\r\n    );\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.CART_REMOVE_ITEM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function* saveShppingAdress({address}) {\r\n  try {\r\n    const state = yield select();\r\n\r\n    yield put({\r\n      type: CONSTANTS.CART_SAVE_ADDRESS_SUCCESS,\r\n      payload: address,\r\n    });\r\n    localStorage.setItem(\r\n      'shippingAddress',\r\n      JSON.stringify(address),\r\n    );\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.CART_SAVE_ADDRESS_FAIL,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* addToCartWatcher() {\r\n  yield takeEvery(CONSTANTS.CART_ADD_ITEM_REQUEST, addToCart);\r\n}\r\nexport function* removeFromCartWatcher() {\r\n  yield takeEvery(CONSTANTS.CART_REMOVE_ITEM_REQUEST, removeFromCart);\r\n}\r\nexport function* saveShppingAdressWatcher() {\r\n  yield takeEvery(CONSTANTS.CART_SAVE_ADDRESS_REQUEST, saveShppingAdress);\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield all([addToCartWatcher(), removeFromCartWatcher(),saveShppingAdressWatcher(),savepaymentAdressWatcher]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}