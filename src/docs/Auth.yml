paths:
 /auth/login:
   post:
     summary: Login
     tags: [Auth]
     requestBody:
       required: true
       content:
         application/json:
           schema:
             type: object
             required:
               - email
               - password
             properties:
               email:
                 type: string
                 format: email
               password:
                 type: string
                 format: password
     responses:
       "200":
         description: OK
         content:
           application/json:
             schema:
               type: object
               properties:
                 user:
                   $ref: '#/components/schemas/User'
       "401":
         description: Invalid email or password
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
             example:
               code: 401
               message: Invalid email or password
 /auth/register:
   post:
     summary: Register
     tags: [Auth]
     requestBody:
       required: true
       content:
         application/json:
           schema:
             type: object
             required:
               - email
               - password
               - name
             properties:
               name:
                 type: string
               email:
                 type: string
                 format: email
               password:
                 type: string
                 format: password
     responses:
       "200":
         description: OK
         content:
           application/json:
             schema:
               type: object
               properties:
                 user:
                   $ref: '#/components/schemas/User'
       "401":
         description: Email already taken
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
             example:
               code: 401
               message: Invalid data
