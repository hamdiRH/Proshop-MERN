{"ast":null,"code":"import { takeEvery, put, all, call } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* getuserDetails({\n  id\n}) {\n  try {\n    const data = yield call(api.userDetailsService, id);\n    yield put({\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* updateUserDetails({\n  user\n}) {\n  try {\n    const data = yield call(api.updateUserService, user);\n    yield put({\n      type: CONSTANTS.USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    localStorage.setItem('token', data.token);\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* resetUserDetails({\n  id\n}) {\n  try {\n    const data = yield call(api.userDetailsService, id);\n    yield put({\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* getuserDetailsWatcher() {\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, getuserDetails);\n}\nexport function* updateUserDetailsWatcher() {\n  yield takeEvery(CONSTANTS.USER_UPDATE_REQUEST, updateUserDetails);\n}\nexport function* resetUserDetailsWatcher() {\n  yield takeEvery(CONSTANTS.USER_RESET_REQUEST, resetUserDetails);\n}\nexport default function* productSaga() {\n  yield all([getuserDetailsWatcher(), updateUserDetailsWatcher(), resetUserDetailsWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/user/saga.js"],"names":["takeEvery","put","all","call","api","CONSTANTS","getuserDetails","id","data","userDetailsService","type","USER_DETAILS_SUCCESS","payload","error","USER_DETAILS_FAIL","response","message","updateUserDetails","user","updateUserService","USER_UPDATE_SUCCESS","localStorage","setItem","JSON","stringify","token","USER_UPDATE_FAIL","resetUserDetails","getuserDetailsWatcher","USER_DETAILS_REQUEST","updateUserDetailsWatcher","USER_UPDATE_REQUEST","resetUserDetailsWatcher","USER_RESET_REQUEST","productSaga"],"mappings":"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","sourcesContent":["import { takeEvery, put, all, call } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* getuserDetails({ id }) {\r\n  try {\r\n\r\n    const data = yield call(api.userDetailsService, id);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* updateUserDetails({user}) {\r\n  try {\r\n\r\n    const data = yield call(api.updateUserService, user);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    localStorage.setItem('token', data.token);\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function* resetUserDetails({ id }) {\r\n  try {\r\n\r\n    const data = yield call(api.userDetailsService, id);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function* getuserDetailsWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, getuserDetails);\r\n}\r\nexport function* updateUserDetailsWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_UPDATE_REQUEST, updateUserDetails);\r\n}\r\nexport function* resetUserDetailsWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_RESET_REQUEST, resetUserDetails);\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield all([getuserDetailsWatcher(),updateUserDetailsWatcher(),resetUserDetailsWatcher()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}