{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport productListReducer from './reducers/productProducer';\nimport cartReducer from './cart/reducer'; // import rootSaga from './saga'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer\n});\nconst initialState = {};\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [thunk, sagaMiddleware];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nfunction* rootSaga() {\n  yield [f];\n} // sagaMiddleware.run(rootSaga)\n\n\nexport default store;","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","createSagaMiddleware","composeWithDevTools","productListReducer","cartReducer","reducer","productList","cart","initialState","sagaMiddleware","middleware","store","rootSaga","f"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEH,kBADiB;AAE9BI,EAAAA,IAAI,EAAEH;AAFwB,CAAD,CAA/B;AAIA,MAAMI,YAAY,GAAG,EAArB;AACA,MAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,MAAMS,UAAU,GAAG,CAACV,KAAD,EAAOS,cAAP,CAAnB;AACA,MAAME,KAAK,GAAGd,WAAW,CACvBQ,OADuB,EAEvBG,YAFuB,EAGvBN,mBAAmB,CAACH,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAHI,CAAzB;;AAKA,UAAUE,QAAV,GAAqB;AACnB,QAAM,CACJC,CADI,CAAN;AAGD,C,CACD;;;AACA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport productListReducer from './reducers/productProducer';\r\nimport cartReducer from './cart/reducer';\r\n// import rootSaga from './saga'\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  cart: cartReducer,\r\n});\r\nconst initialState = {};\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [thunk,sagaMiddleware];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\nfunction* rootSaga() {\r\n  yield [\r\n    f\r\n  ]\r\n}\r\n// sagaMiddleware.run(rootSaga)\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}