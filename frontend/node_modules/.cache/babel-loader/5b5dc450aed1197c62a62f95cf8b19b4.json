{"ast":null,"code":"import { takeEvery, put, all, call } from 'redux-saga/effects';\nimport * as api from './services';\nimport * as CONSTANTS from './constants';\nexport function* userDetails({\n  id\n}) {\n  try {\n    const data = yield call(api.userDetailsService, id);\n    yield put({\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CONSTANTS.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}\nexport function* userDetailsWatcher() {\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, userDetails);\n}\nexport default function* productSaga() {\n  yield all([userDetailsWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/uzuma/Desktop/hamdiRH/proshop mern/frontend/src/redux/user/saga.js"],"names":["takeEvery","put","all","call","api","CONSTANTS","userDetails","id","data","userDetailsService","type","USER_DETAILS_SUCCESS","payload","error","USER_DETAILS_FAIL","response","message","userDetailsWatcher","USER_DETAILS_REQUEST","productSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA8B;AACnC,MAAI;AAEF,UAAMC,IAAI,GAAG,MAAML,IAAI,CAACC,GAAG,CAACK,kBAAL,EAAyBF,EAAzB,CAAvB;AAEA,UAAMN,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACM,oBADR;AAERC,MAAAA,OAAO,EAAEJ;AAFD,KAAD,CAAT;AAID,GARD,CAQE,OAAOK,KAAP,EAAc;AACd,UAAMZ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,SAAS,CAACS,iBADR;AAERF,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIH,KAAK,CAACG;AALJ,KAAD,CAAT;AAOD;AACF;AAED,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMjB,SAAS,CAACK,SAAS,CAACa,oBAAX,EAAiCZ,WAAjC,CAAf;AACD;AAED,eAAe,UAAUa,WAAV,GAAwB;AACrC,QAAMjB,GAAG,CAAC,CAACe,kBAAkB,EAAnB,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, put, all, call } from 'redux-saga/effects';\r\nimport * as api from './services';\r\nimport * as CONSTANTS from './constants';\r\n\r\nexport function* userDetails({ id }) {\r\n  try {\r\n\r\n    const data = yield call(api.userDetailsService, id);\r\n\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CONSTANTS.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* userDetailsWatcher() {\r\n  yield takeEvery(CONSTANTS.USER_DETAILS_REQUEST, userDetails);\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield all([userDetailsWatcher(),]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}